# Development Dockerfile for tycho-api
# Uses cargo watch for hot reloading and builds in debug mode

FROM rust:latest
WORKDIR /app

RUN echo "游댯 [DEV] Setting up development environment..."

# Install cargo-watch for hot reloading
RUN cargo install cargo-watch
RUN echo "游릭 [DEV] cargo-watch installed"

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    curl \
    bash \
    && rm -rf /var/lib/apt/lists/*

# Copy dependency files first for better caching
COPY Cargo.toml Cargo.lock ./
RUN echo "游댯 [DEV] Building dependencies in debug mode..."
RUN mkdir src && echo "fn main() {}" > src/main.rs
RUN cargo build 2>&1 | tee /tmp/cargo-deps.log || (echo "游댮 [ERROR] Dependency build failed" && cat /tmp/cargo-deps.log && exit 1)
RUN rm -rf src
RUN echo "游릭 [DEV] Dependencies cached"

# Copy source code (will be overridden by volume mount)
COPY . .

# Build the application once to ensure everything works
RUN echo "游댯 [DEV] Initial debug build..."
RUN cargo build 2>&1 | tee /tmp/cargo-build.log || (echo "游댮 [ERROR] Build failed" && cat /tmp/cargo-build.log && exit 1)
RUN echo "游릭 [DEV] Initial build completed"

# Create startup script for development
RUN echo '#!/bin/bash\n\
echo "游릭 [DEV STARTUP] Starting tycho-api in development mode..."\n\
echo "游댱 [ENV] TYCHO_API_KEY: ${TYCHO_API_KEY:0:10}..."\n\
echo "游댱 [ENV] Chain URLs configured:"\n\
echo "  - TYCHO_ETHEREUM_URL: $TYCHO_ETHEREUM_URL"\n\
echo "  - TYCHO_BASE_URL: $TYCHO_BASE_URL"\n\
echo "  - TYCHO_UNICHAIN_URL: $TYCHO_UNICHAIN_URL"\n\
echo "游댱 [ENV] RPC_URL: ${RPC_URL:0:30}..."\n\
echo "游댱 [ENV] RUST_LOG: $RUST_LOG"\n\
echo "游댱 [ENV] RUST_BACKTRACE: $RUST_BACKTRACE"\n\
echo "游릮 [NETWORK] Service will listen on port 3000"\n\
echo "游댯 [DEV] Starting with cargo-watch for auto-reload..."\n\
# Build the cargo run command with all arguments\n\
ARGS="$@"\n\
if [ -z "$ARGS" ]; then\n\
    exec cargo watch -x "run"\n\
else\n\
    exec cargo watch -x "run -- $ARGS"\n\
fi' > /start-dev.sh && chmod +x /start-dev.sh

EXPOSE 3000
ENTRYPOINT ["/start-dev.sh"]